<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dataSet1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="$this.TrayHeight" type="System.Int32, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>25</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        /wDttttt2220kAf/AP8A+2223bbaSe22234AAAAAAJ//ANttttu222kACf8A/wD22227bfySR228AAAA
        AAAAP/8Attttt2220AAf/wD/AG2227bfwCQA3AAAAAAAAAB//wBttttu220AACT/ALbbbbbd/ABAABQA
        AAAAAAAE/wD/ANtttu22kAAASfttttttu2gEAAADwAAAAAAACT//ALbbbbtJAAAAn7bbbbbbtsBAAAAE
        XAAAAAAAEn//AG22/baQAAAB/wDtttttu20gAAAATEiAAAAAACT/AP7bbdtpAAAAA/8A222227bSAAAA
        JJTtWAAAAABJ/wDtttu2kAAAAAf/APbbbbttpIAAAkgM2WAAAAAAk/8A2227aAAAAAAP/wDtttu23kkA
        ACSIzZJCoAAAACT/ALbbtoAABIAAH/8A+237beSQAAJJGf8AJAbQAAAASf8AbbdoFgBJAAA//wC237b/
        AEkgACSRE/JIaAGAAACT/ttu0e2EkgAAf/tt+2/kkgAASSUfJJJaEygAASfttt2/+0kkgAD/APbbtv4J
        AAAEkmE2ySQkgNsAAk/7b7/dbpJJIAH/AG227eACQAAJJCP9skgNATcwAJ/23RW73aSSQAP2223aACSA
        AD3IzPtkkBJCTaoBJ+273fa7SSSAB/2222ACSAO4AFSTftkkhJCbbuJP2326SbaSSAAP/wD/ALbgJL8g
        AAGtJk+ySQWhJtt0n7bbdpANJIAAH/8A/wBtvlwAAAAe2kmbbZJCSA22lf8A7bbtIAJAAAA//wD+22QA
        +4ABHbSSP9kkgNATbSbv+237SQQAAAB//wBtt+gAAAnpu22kmbbJISyG22lr9tt20kAAAADtttt+0gAC
        SRKA21k3/ZJIDAk209xNtu2kCAAQQNttt+20ACSSHZJLZkibZJISQG2t/c9t20ASAACBttt222kASSK/
        JISQzL7ZJICAktvf+Ju2gCQAAUttt2222gASSybICwG2nmpJASQEJN/3p+8ACQE21ttv2222gATGfZIA
        k20tbBUwCWJNr+ghfgAA221tttu2220gSUzbJCAm2lv4CSD8ZMBtf8dAA2221tttttv238SYybZJbG2k
        tnYSYRl8QAF//ti22m9tttttt+3/AIiJn+yQWBtJaWwEkZJL2QCbeuyttNbbbbbbft/4AdZ+ySEkFpaW
        2AkttLW2ACO2SVNtrbbbbbdtt4AlJO2ySUhtrS2wAJtLTb3OJP8Aklk3a22223bbbQAKST9klISbSxtg
        BCbamXLSSftslR7W2223bbbbBM6ydkkJCbSW9hZSSbQu3bbTtts0k222237bbbYQtWZNsgILaSXtIISa
        q223baZtikk3G2223bbbbaAiRvskhibaW18JCik2227bVPqkkkn+2227bbbaABqf8kkBDbWy8ki0k222
        zbSfwskkk2w2227bbbQAtz9kkgATa2Vr9kk222zbSSYpkkk222223bbbQAkt5tkkJIbS8gAtNm22TbaT
        Utskm22y222/bbaAkll9kkJJDQsAAEtkm0nbbWwABsm227W2227bSAklsrskBJMqkAAklkkkk7bagAAF
        J+23a2223baAElpkhsgArskAAkkkkkk27aoAAApJm0rW223baQAApJldki5JlIAkklpEk222pAAAFJMk
        kr223bbYAAFpMkT9pJlIAkklJJkk23JJAABpkkkm/wBtt20yAALSTCALSZSAJJJSSSbNvSSSQAJZJJJt
        /tttuyQABYQkAJbaSAAAJSSSSTtSSSSSJLZJJtv9tttkSABckkARJaCAAAAKSSSTaSSSSSRJLZJJt9tt
        t8SSBEkkAAJJAQAAABaSSTKSSSSSSJJSTJJL/8QAHxEAAgICAgMBAAAAAAAAAAAAAREAUEBgIDAQUXCA
        /9oACAEDAQE/EP38tKWlKLSl+xXpzgOnPTgVAXo55g6cCo9DPU4DpwOnAqAu9OCNOAqAu2UXg4osi4nH
        BUBdYuk5IsxywVG6lx8zmg1jj8E54SN6aCoC6s0Y9tOBUBdOcJ4o9rtxx4IKgLvXHH3j2oTWKAnS1F5B
        zTUqLmDoa7Ab5Rd7ulFpSyHZKLCVwsRdjqlcnBAi0paUotJUWlL6+vqf/8QAIBEAAgICAwEBAQEAAAAA
        AAAAAREAYEBQIDBREDFwgP/aAAgBAgEBPxCgOlOlulOlOlOlulOlOOlOlP8AxaqcqcoQqWPp8U4hwhUc
        czThDhCoY6zThaJU1OFN6ME+KcQ4Qts4/gGKfGyfEY5DhC1j6QMk+NmBllolqVFzAWaU1iiigGeWhC16
        zB8IcKasaNv5PzaKKLHIBhIbhRRYnju1FFgkDCCN6oou8+dCNA+0AaW4z9IzRlvufQIyxp3HH1kb5x96
        yRoXHiLbOPHWtfFx4T27j0C1Tj3AwSY6S446S48l7AmOiji6U46U/wCKOsnYf//EACUQAQACAAUEAwEB
        AQAAAAAAAAEAESAhMDFAEEFQUWBhcZGB0f/aAAgBAQABPxDz1QFh7Sg+EB0AOZfLeEJgPhImHvADbzbq
        5u0PeAPOuoKA1HwF80Fn3lVxXl3wXHSw9oAeUviigOc+IetLD2lV5y9NlXPtKDTfK3o1KPgo4KleHcN8
        0YZ8p8nabQt4e/DlN/h1yxtB/Xr4WqK69v8Aqb/CVtvAjy29QTl/Pg67YhRsl2WT7+CrRei+Xc9QTY/A
        1bWkJWNMHJkec+DVGqmRzIAsb4p4pW6yuxmQuTjdSvFPKuCplmPcEFjZ5rtcW3hO2P8Ak+lfXKeXVy0p
        KDtLuI2nY/uDZZp11uXx3StP1KPWDMI58ZTLb1CMt/Wsy5fLpZ+pTQyDscgUbGmA5ZX3hdM42UyhBXbS
        /QeXkO56htj4RwW++iks94s45gqsaYOTI+DdC0l5+ZT3Mijvz2yZiXpWYnmOk5FxbblvRZy1XRy1Uyhy
        9OFcvkPOsVstKSz3xVUW8D9ye4AtWYnTdd0Fo1LT8yksddaItt4kLX+Q2tvTC7adLKcZW8C07y8B3JZ3
        0lUVXQunKf8AQgiWNmnUrhOJUcW0gU+xLpY7OBUi226bOWZ6gebPuaFctbb5QHeC7kL9o2tulXUVWNMJ
        7D7wVK5DgfbG8CsIWwK6VEdFMqVKw1KlTKAX0YILOctEd+WFsCjLQolSmV1Bdi4JvlOwX+9BRsgOTk4j
        jrOtZ1QVqBRlqi7P7AN84AbGJMjmQRLOUqOWFtQKNMTsQ92ANjSErGFk2eTm5QK0QKOtda61e0E75QD7
        1QuFJTkzcy4y9E5AW1AA0Bu0D3zgBsaDizMCuoptA/XFerlxgtygUdHAC7EPZgDY4AXj7Lw17YBlpukF
        sAGEb9QJ98I7nRFAOAdsSU6boVblAo6iYHvADbh0bx0x9zXWeJLOEFsCiAu0H3gDtK4YKwA5a1oCsDqV
        blECBPvjBcCuYtug5mB0HoJ2Ie8DYcctviTjrtpJpZu0F3ygTt0CuOe3Oc9N3xjYDvnKrbqaTqbwp4oM
        ALsQ92AGxhCuMFwK0XiuWsmdEG75QBjCuMF+AXUphFaAVxg0K5DlpVfRQYHEFcYNeuE56FSjUCujw6uV
        XgXbGb6bv1OMbcr/2Q==
</value>
  </data>
</root>